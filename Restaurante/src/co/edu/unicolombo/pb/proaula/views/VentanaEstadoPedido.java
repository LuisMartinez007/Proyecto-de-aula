/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicolombo.pb.proaula.views;

import co.edu.unicolombo.pb.proaula.Constants.EstadoPedido;
import co.edu.unicolombo.pb.proaula.conceptos.ComandoPedido;
import co.edu.unicolombo.pb.proaula.conceptos.ItemPedido;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class VentanaEstadoPedido extends javax.swing.JFrame {
    
    private DefaultTableModel modelo;
    private Timer timer;
    private Map<Integer, EstadoPedido> estadosProductos;
    private Map<Integer, Long> tiempoInicioBebidas;
    private static final long TIEMPO_ENTREGA_BEBIDAS = 60000; // 1:30 minutos
    private static final String[] bebidas = {"Te de limon", "Limonada", "Coca cola", "Pepsi", "Agua", "Agua mineral"};
    
    public VentanaEstadoPedido() {
        initComponents();
        estadosProductos = new HashMap<>();
        tiempoInicioBebidas = new HashMap<>();
        inicializarTabla();
        iniciarActualizacionAutomatica();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedido = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, -1, -1));

        tablaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaPedido);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 393));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    
     private void inicializarTabla() {
        modelo = new DefaultTableModel();
        modelo.addColumn("Pedido");
        modelo.addColumn("Estado");
        
        tablaPedido.setModel(modelo);
        
        List<ItemPedido> items = VentanaRegistro.gestionVenta.getItems();
        
        for (int i = 0; i < items.size(); i++) {
            ItemPedido item = items.get(i);
            String nombreProducto = item.getProducto().getNombre();
            
            if (esBebida(item)) {
                estadosProductos.put(i, EstadoPedido.COMPLETADO);
                tiempoInicioBebidas.put(i, System.currentTimeMillis());
                modelo.addRow(new Object[]{nombreProducto, EstadoPedido.COMPLETADO});
            } else {
                estadosProductos.put(i, VentanaMenu.command.getEstado());
                modelo.addRow(new Object[]{nombreProducto, VentanaMenu.command.getEstado()});
            }
        }
    }
    
    private boolean esBebida(ItemPedido item) {
        String nombreProducto = item.getProducto().getNombre();
        return Arrays.asList(bebidas).contains(nombreProducto);
    }
    
    private void iniciarActualizacionAutomatica() {
        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                actualizarEstados();
            }
        }, 0, 30000);
    }
    
    private void actualizarEstados() {
        java.awt.EventQueue.invokeLater(() -> {
            List<ItemPedido> items = VentanaRegistro.gestionVenta.getItems();
            long tiempoActual = System.currentTimeMillis();
            
            for (int i = 0; i < items.size(); i++) {
                // Si ya está entregado, no hacemos nada
                if (estadosProductos.get(i) == EstadoPedido.ENTREGADO) {
                    continue;
                }
                
                ItemPedido item = items.get(i);
                EstadoPedido estadoActual = estadosProductos.get(i);
                
                if (esBebida(item)) {
                    // Lógica para bebidas
                    if (estadoActual == EstadoPedido.COMPLETADO) {
                        Long tiempoInicio = tiempoInicioBebidas.get(i);
                        if (tiempoActual - tiempoInicio >= TIEMPO_ENTREGA_BEBIDAS) {
                            estadosProductos.put(i, EstadoPedido.ENTREGADO);
                            modelo.setValueAt(EstadoPedido.ENTREGADO, i, 1);
                        }
                    }
                } else {
                    EstadoPedido nuevoEstado = estadoActual;
                    
                    switch (estadoActual) {
                        case PENDIENTE:
                            nuevoEstado = EstadoPedido.EN_PROCESO;
                            break;
                        case EN_PROCESO:
                            nuevoEstado = EstadoPedido.COMPLETADO;
                            break;
                        case COMPLETADO:
                            nuevoEstado = EstadoPedido.ENTREGADO;
                            break;
                        default:
                            break;
                    }
                    
                    estadosProductos.put(i, nuevoEstado);
                    modelo.setValueAt(nuevoEstado, i, 1);
                }
            }
        });
    }
    
    
    
    @Override
    public void dispose() {
        if (timer != null) {
            timer.cancel();
        }
        super.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaEstadoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaEstadoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaEstadoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaEstadoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaEstadoPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPedido;
    // End of variables declaration//GEN-END:variables
}
